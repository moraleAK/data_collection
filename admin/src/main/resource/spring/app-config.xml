<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config />
    <context:component-scan base-package="com.el.dc.api.dao"/>
    <context:component-scan base-package="com.el.dc.api.service"/>
    <!--<context:component-scan base-package="com.el.dc.api.controller"/>-->

    <bean id="appProperties" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="fileEncoding" value="UTF-8" />
        <property name="localOverride" value="true" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="order" value="10" />
        <property name="location" value="classpath:app.properties" />
    </bean>

    <!--<bean id="overrideProperties" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="fileEncoding" value="UTF-8" />
        <property name="localOverride" value="true" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="ignoreResourceNotFound" value="true" />
        <property name="order" value="1" />
        <property name="location" value="file:/opt/etc/payment_admin/payment_admin.properties" />
    </bean>-->

    <bean id="idFactory" class="me.anyteam.commons.id.IDFactory" init-method="init">
        <property name="dataCenterId" value="${id.factory.data.center.id}" />
        <property name="workerId" value="${id.factory.work.id}" />
    </bean>


    <bean id="redisClient" class="com.el.wc.payment.commons.redis.RedisClient">
        <property name="redisTemplate" ref="redisTemplate" />
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}" />
        <property name="password" value="${redis.password}" />
        <property name="port" value="${redis.port}" />
        <property name="poolConfig" ref="jedisPoolConfig" />
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.config.maxTotal}" />
        <property name="maxWaitMillis" value="${redis.pool.config.maxWaitMillis}" />
        <property name="maxIdle" value="${redis.pool.config.maxIdle}" />
        <property name="testOnBorrow" value="true" />
    </bean>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"  />

    <import resource="db-config.xml"/>
    <import resource="security-config.xml"/>
</beans>